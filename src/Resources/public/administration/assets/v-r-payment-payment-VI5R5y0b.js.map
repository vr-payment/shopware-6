{"version":3,"file":"v-r-payment-payment-VI5R5y0b.js","sources":["../../../app/administration/src/module/vrpayment-order/extension/sw-order/sw-order.html.twig","../../../app/administration/src/module/vrpayment-order/extension/sw-order/index.js","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-completion/index.html.twig","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-completion/index.js","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-refund/index.html.twig","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-refund/index.js","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-refund-partial/index.html.twig","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-refund-partial/index.js","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-refund-by-amount/index.html.twig","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-refund-by-amount/index.js","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-void/index.html.twig","../../../app/administration/src/module/vrpayment-order/component/vrpayment-order-action-void/index.js","../../../app/administration/src/module/vrpayment-order/page/vrpayment-order-detail/index.html.twig","../../../app/administration/src/module/vrpayment-order/page/vrpayment-order-detail/index.js","../../../app/administration/src/module/vrpayment-order/index.js","../../../app/administration/src/module/vrpayment-settings/acl/index.js","../../../app/administration/src/module/vrpayment-settings/page/vrpayment-settings/index.html.twig","../../../app/administration/src/module/vrpayment-settings/page/vrpayment-settings/configuration-constants.js","../../../app/administration/src/module/vrpayment-settings/page/vrpayment-settings/index.js","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-credentials/index.html.twig","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-credentials/index.js","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-options/index.html.twig","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-options/index.js","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-settings-icon/index.html.twig","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-settings-icon/index.js","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-storefront-options/index.html.twig","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-storefront-options/index.js","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-advanced-options/index.html.twig","../../../app/administration/src/module/vrpayment-settings/component/sw-vrpayment-advanced-options/index.js","../../../app/administration/src/module/vrpayment-settings/index.js","../../../app/administration/src/core/service/api/vrpayment-configuration.service.js","../../../app/administration/src/core/service/api/vrpayment-refund.service.js","../../../app/administration/src/core/service/api/vrpayment-transaction.service.js","../../../app/administration/src/core/service/api/vrpayment-transaction-completion.service.js","../../../app/administration/src/core/service/api/vrpayment-transaction-void.service.js","../../../app/administration/src/init/api-service.init.js"],"sourcesContent":["{% block sw_order_detail_content_tabs_general %}\n    {% parent %}\n\n{# sw-tabs-item will dissappear. See: https://github.com/shopware/shopware/blob/trunk/UPGRADE-6.7.md#sw-tabs-is-removed #}\n<sw-tabs-item v-if=\"isVRPaymentPayment\"\n\t\t\t  :route=\"{ name: 'vrpayment.order.detail', params: { id: $route.params.id } }\"\n\t\t\t  :title=\"$tc('vrpayment-order.header')\">\n\t{{ $tc('vrpayment-order.header') }}\n</sw-tabs-item>\n{% endblock %}\n\n{% block sw_order_detail_actions_slot_smart_bar_actions %}\n<template v-if=\"isEditable\">\n\t{% parent %}\n</template>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './sw-order.html.twig';\nimport './sw-order.scss';\n\nconst {Component, Context} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nconst vrpaymentFormattedHandlerIdentifier = 'handler_vrpaymentpayment_vrpaymentpaymenthandler';\n\nComponent.override('sw-order-detail', {\n\ttemplate,\n\n\tdata() {\n\t\treturn {\n\t\t\tisVRPaymentPayment: false\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tisEditable() {\n\t\t\treturn !this.isVRPaymentPayment || this.$route.name !== 'vrpayment.order.detail';\n\t\t},\n\t\tshowTabs() {\n\t\t\treturn true;\n\t\t}\n\t},\n\n\twatch: {\n\t\torderId: {\n\t\t\tdeep: true,\n\t\t\thandler() {\n\t\t\t\tif (!this.orderId) {\n\t\t\t\t\tthis.setIsVRPaymentPayment(null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst orderRepository = this.repositoryFactory.create('order');\n\t\t\t\tconst orderCriteria = new Criteria(1, 1);\n\t\t\t\torderCriteria.addAssociation('transactions');\n\n\t\t\t\torderRepository.get(this.orderId, Context.api, orderCriteria).then((order) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(order.amountTotal <= 0) ||\n\t\t\t\t\t\t(order.transactions.length <= 0) ||\n\t\t\t\t\t\t!order.transactions[0].paymentMethodId\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.setIsVRPaymentPayment(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst paymentMethodId = order.transactions[0].paymentMethodId;\n\t\t\t\t\tif (paymentMethodId !== undefined && paymentMethodId !== null) {\n\t\t\t\t\t\tthis.setIsVRPaymentPayment(paymentMethodId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\timmediate: true\n\t\t}\n\t},\n\n\tmethods: {\n\t\tsetIsVRPaymentPayment(paymentMethodId) {\n\t\t\tif (!paymentMethodId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst paymentMethodRepository = this.repositoryFactory.create('payment_method');\n\t\t\tpaymentMethodRepository.get(paymentMethodId, Context.api).then(\n\t\t\t\t(paymentMethod) => {\n\t\t\t\t\tthis.isVRPaymentPayment = (paymentMethod.formattedHandlerIdentifier === vrpaymentFormattedHandlerIdentifier);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n});\n","{% block vrpayment_order_action_completion %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`vrpayment-order.modal.title.capture`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block vrpayment_order_action_completion_amount %}\n\t\t<mt-checkbox\n\t\t\t\t:label=\"$tc('vrpayment-order.captureAction.button.text')\"\n\t\t\t\tv-model:checked=\"isCompletion\">\n        </mt-checkbox>\n\t{% endblock %}\n\n\t{% block vrpayment_order_action_completion_confirm_button %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\"\n\t\t\t\t   @click=\"completion\">\n\t\t\t{{ $tc('vrpayment-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('vrpayment-order-action-completion', {\n\n\ttemplate: template,\n\n\tinject: ['VRPaymentTransactionCompletionService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tisCompletion: false\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t},\n\n\t\tcompletion() {\n\t\t\tif (this.isCompletion) {\n\t\t\t\tthis.isLoading = true;\n\t\t\t\tthis.VRPaymentTransactionCompletionService.createTransactionCompletion(\n\t\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\t\tthis.transactionData.transactions[0].id\n\t\t\t\t).then(() => {\n\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\ttitle: this.$tc('vrpayment-order.captureAction.successTitle'),\n\t\t\t\t\t\tmessage: this.$tc('vrpayment-order.captureAction.successMessage')\n\t\t\t\t\t});\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n","{% block vrpayment_order_action_refund %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`vrpayment-order.modal.title.refund`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block vrpayment_order_action_refund_amount %}\n\n\t\t<mt-number-field\n\t\t\t:max=\"this.$parent.$parent.itemRefundableQuantity\"\n\t\t\t:min=\"0\"\n\t\t\t v-model=\"refundQuantity\"\n\t\t\t :label=\"$tc('vrpayment-order.refund.refundQuantity.label')\">\n\t\t</mt-number-field>\n\n\t\t<div>\n\t\t\t{{ $tc('vrpayment-order.refundAction.maxAvailableItemsToRefund') }}:\n\t\t\t<b>{{ this.$parent.$parent.itemRefundableQuantity }}</b>\n\t\t</div>\n\t{% endblock %}\n\n\t{% block vrpayment_order_action_refund_confirm_button %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\" @click=\"refund()\">\n\t\t\t{{ $tc('vrpayment-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('vrpayment-order-action-refund', {\n\ttemplate,\n\n\tinject: ['VRPaymentRefundService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\n\t\torderId: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\trefundQuantity: 0,\n\t\t\tisLoading: true,\n\t\t\tcurrentLineItem: '',\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.refundQuantity = 1;\n\t\t},\n\n\t\trefund() {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.VRPaymentRefundService.createRefund(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\tthis.refundQuantity,\n\t\t\t\tthis.$parent.$parent.currentLineItem\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('vrpayment-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('vrpayment-order.refundAction.successMessage')\n\t\t\t\t});\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.$emit('modal-close');\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t});\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n","{% block vrpayment_order_action_refund_partial %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`vrpayment-order.modal.title.refund`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block vrpayment_order_action_refund_amount_partial %}\n\t\t<mt-number-field\n\t\t :max=\"this.$parent.$parent.itemRefundableAmount\"\n\t\t :min=\"0.00\"\n\t\t v-model=\"refundAmount\"\n\t\t :label=\"$tc('vrpayment-order.refund.refundAmount.label')\"\n\t\t :suffix=\"currency\">\n\t\t</mt-number-field>\n\n\t\t<div>\n\t\t\t{{ $tc('vrpayment-order.refundAction.maxAvailableAmountToRefund') }}:\n\t\t\t<b>{{ this.$parent.$parent.itemRefundableAmount }}</b>\n\t\t</div>\n\t{% endblock %}\n\n\t{% block vrpayment_order_action_refund_confirm_button_partial %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\" @click=\"createPartialRefund(this.$parent.$parent.currentLineItem)\">\n\t\t\t{{ $tc('vrpayment-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('vrpayment-order-action-refund-partial', {\n\ttemplate,\n\n\tinject: ['VRPaymentRefundService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\n\t\torderId: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tcurrency: this.transactionData.transactions[0].currency,\n\t\t\trefundAmount: 0.00,\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n        createdComponent() {\n            this.isLoading = false;\n            this.currency = this.transactionData.transactions[0].currency;\n            if (!this.refundAmount) {\n                this.refundAmount = this.$parent.$parent.itemRefundableAmount;\n            }\n        },\n\n\t\tcreatePartialRefund(itemUniqueId) {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.VRPaymentRefundService.createPartialRefund(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\tthis.refundAmount,\n\t\t\t\titemUniqueId\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('vrpayment-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('vrpayment-order.refundAction.successMessage')\n\t\t\t\t});\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.$emit('modal-close');\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t});\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n    watch: {\n        refundAmount(newValue) {\n            if (newValue !== null) {\n                this.refundAmount = Math.round(newValue * 100) / 100;\n            }\n        }\n    }\n});\n","{% block vrpayment_order_action_refund_by_amount %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`vrpayment-order.modal.title.refund`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block vrpayment_order_action_refund_amount_by_amount %}\n\t\t<mt-number-field\n\t\t :max=\"refundableAmount\"\n\t\t :min=\"0\"\n\t\t v-model=\"refundAmount\"\n\t\t :label=\"$tc('vrpayment-order.refund.refundAmount.label')\"\n\t\t :suffix=\"currency\">\n\t\t</mt-number-field>\n\t{% endblock %}\n\n\t{% block vrpayment_order_action_refund_confirm_button_by_amount %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\" @click=\"refundByAmount()\">\n\t\t\t{{ $tc('vrpayment-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('vrpayment-order-action-refund-by-amount', {\n\ttemplate,\n\n\tinject: ['VRPaymentRefundService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\n\t\torderId: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tcurrency: this.transactionData.transactions[0].currency,\n\t\t\trefundAmount: 0,\n\t\t\trefundableAmount: 0,\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.currency = this.transactionData.transactions[0].currency;\n\t\t\tthis.refundAmount = Number(this.transactionData.transactions[0].amountIncludingTax);\n\t\t\tthis.refundableAmount = Number(this.transactionData.transactions[0].amountIncludingTax);\n\t\t},\n\n\t\trefundByAmount() {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.VRPaymentRefundService.createRefundByAmount(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\tthis.refundAmount\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('vrpayment-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('vrpayment-order.refundAction.successMessage')\n\t\t\t\t});\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.$emit('modal-close');\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t});\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar errorTitle;\n\t\t\t\t\tvar errorMessage;\n\t\t\t\t\tif (errorResponse.response.data == 'refundExceedsAmount') {\n\t\t\t\t\t\terrorTitle = this.$tc('vrpayment-order.refundAction.refundExceedsTotalError.title');\n\t\t\t\t\t\terrorMessage = this.$tc('vrpayment-order.refundAction.refundExceedsTotalError.messageRefundAmountExceedsAvailableBalance');\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorTitle = errorResponse.response.data.errors[0].title;\n\t\t\t\t\t\terrorMessage = errorResponse.response.data.errors[0].detail;\n\t\t\t\t\t}\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorTitle,\n\t\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n","{% block vrpayment_order_action_void %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`vrpayment-order.modal.title.void`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block vrpayment_order_action_void_amount %}\n        {# Review if this v-model:checked=\"isVoid\" needs to change to checked #}\n\t\t<mt-checkbox\n\t\t\t\t:label=\"$tc('vrpayment-order.voidAction.confirm.message')\"\n\t\t\t\tv-model:checked=\"isVoid\">\n        </mt-checkbox>\n\t{% endblock %}\n\n\t{% block vrpayment_order_action_void_confirm_button %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\"\n\t\t\t\t   @click=\"voidPayment\">\n\t\t\t{{ $tc('vrpayment-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('vrpayment-order-action-void', {\n\ttemplate,\n\n\tinject: ['VRPaymentTransactionVoidService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tisVoid: false\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t},\n\t\tlineItemColumns() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tproperty: 'uniqueId',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.uniqueId'),\n\t\t\t\t\trawData: false,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tprimary: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'name',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.name'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tsortable: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'quantity',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.quantity'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'amountIncludingTax',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.amountIncludingTax'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tinlineEdit: 'string',\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'type',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.type'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tsortable: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'taxAmount',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.taxAmount'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.currency = this.transactionData.transactions[0].currency;\n\t\t\tthis.refundableAmount = this.transactionData.transactions[0].amountIncludingTax;\n\t\t\tthis.refundAmount = this.transactionData.transactions[0].amountIncludingTax;\n\t\t},\n\n\t\tvoidPayment() {\n\t\t\tif (this.isVoid) {\n\t\t\t\tthis.isLoading = true;\n\t\t\t\tthis.VRPaymentTransactionVoidService.createTransactionVoid(\n\t\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\t\tthis.transactionData.transactions[0].id\n\t\t\t\t).then(() => {\n\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\ttitle: this.$tc('vrpayment-order.voidAction.successTitle'),\n\t\t\t\t\t\tmessage: this.$tc('vrpayment-order.voidAction.successMessage')\n\t\t\t\t\t});\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n","{% block vrpayment_order_detail %}\n<div class=\"vrpayment-order-detail\">\n\t<div v-if=\"!isLoading\">\n\t\t<mt-card :title=\"$tc('vrpayment-order.paymentDetails.cardTitle')\">\n\t\t\t<template #grid>\n\t\t\t\t{% block vrpayment_order_actions_section %}\n\t\t\t\t<mt-card-section secondary slim>\n\t\t\t\t\t{% block vrpayment_order_transaction_refunds_action_button %}\n\t\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t:disabled=\"transaction.state != 'FULFILL' || refundableAmount <= 0\"\n\t\t\t\t\t\t\t\t@click=\"spawnModal('refundByAmount')\">\n\t\t\t\t\t\t\t{{ $tc('vrpayment-order.buttons.label.refund') }}\n\t\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block vrpayment_order_transaction_completion_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'AUTHORIZED' || isLoading\"\n\t\t\t\t\t\t\t@click=\"spawnModal('completion')\">\n\t\t\t\t\t\t{{ $tc('vrpayment-order.buttons.label.completion') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block vrpayment_order_transaction_void_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'AUTHORIZED' || isLoading\"\n\t\t\t\t\t\t\t@click=\"spawnModal('void')\">\n\t\t\t\t\t\t{{ $tc('vrpayment-order.buttons.label.void') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block vrpayment_order_transaction_download_invoice_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'FULFILL'\"\n\t\t\t\t\t\t\t@click=\"downloadInvoice()\">\n\t\t\t\t\t\t{{ $tc('vrpayment-order.buttons.label.download-invoice') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block vrpayment_order_transaction_download_packing_slip_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'FULFILL'\"\n\t\t\t\t\t\t\t@click=\"downloadPackingSlip()\">\n\t\t\t\t\t\t{{ $tc('vrpayment-order.buttons.label.download-packing-slip') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</mt-card-section>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n\t\t</mt-card>\n\t\t{% block vrpayment_order_transaction_history_card %}\n\t\t<mt-card :title=\"$tc('vrpayment-order.transactionHistory.cardTitle')\">\n\t\t\t<template #grid>\n\n\t\t\t\t{% block vrpayment_order_transaction_history_grid %}\n\t\t\t\t<sw-data-grid :dataSource=\"transactionData.transactions\"\n\t\t\t\t\t\t\t  :columns=\"relatedResourceColumns\"\n\t\t\t\t\t\t\t  :showActions=\"true\"\n\t\t\t\t\t\t\t  :showSelection=\"false\">\n\n\t\t\t\t\t<template #actions=\"{ item }\">\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.customerId\">{{ $tc('vrpayment-order.transactionHistory.customerId') }}: {{ item.customerId }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.customerName\">{{ $tc('vrpayment-order.transactionHistory.customerName') }}: {{ item.customerName }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.creditCardHolder\">{{ $tc('vrpayment-order.transactionHistory.creditCardHolder') }}: {{ item.creditCardHolder }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.paymentMethodName\">{{ $tc('vrpayment-order.transactionHistory.paymentMethod') }}: {{ item.paymentMethodName }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.brandName\">{{ $tc('vrpayment-order.transactionHistory.paymentMethodBrand') }}: {{ item.brandName }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.pseudoCardNumber\">{{ $tc('vrpayment-order.transactionHistory.PseudoCreditCardNumber') }}: {{ item.pseudoCardNumber }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.pseudoCardNumber && item.cardExpireMonth && item.cardExpireYear\">{{ $tc('vrpayment-order.transactionHistory.CardExpire') }}: {{ item.cardExpireMonth }} / {{ item.cardExpireYear }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.payId\">PayID: {{ item.payId }}</sw-context-menu-item>\n\t\t\t\t\t</template>\n\t\t\t\t</sw-data-grid>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n\n\t\t</mt-card>\n\t\t{% endblock %}\n\t\t{% block vrpayment_order_transaction_line_items_card %}\n        <mt-card :title=\"$tc('vrpayment-order.lineItem.cardTitle')\">\n            <template #grid>\n\n                {% block vrpayment_order_transaction_line_items_grid %}\n                    <sw-data-grid\n                            :dataSource=\"lineItems\"\n                            :columns=\"lineItemColumns\"\n                            :showActions=\"true\"\n                            :showSelection=\"true\"\n                            :local-mode=\"false\"\n                            :is-record-selectable=\"isSelectable\"\n                            @selection-change=\"onSelectionChanged\"\n                    >\n                    {% block vrpayment_order_transaction_line_items_grid_grid_actions %}\n                        <template #actions=\"{ item }\">\n                            <sw-context-menu-item\n                                    :disabled=\"transaction.state != 'FULFILL' || item.refundableQuantity != item.quantity || item.refundableAmount == 0 || item.itemRefundedAmount > 0 || item.itemRefundedQuantity > 0\"\n                                    @click=\"lineItemRefund(item.uniqueId)\">\n                                {{ $tc('vrpayment-order.buttons.label.refund-whole-line-item') }}\n                            </sw-context-menu-item>\n\n                            <sw-context-menu-item\n                                    :disabled=\"transaction.state != 'FULFILL' || item.refundableQuantity == 0 || item.refundableAmount == 0 || item.itemRefundedAmount > 0\"\n                                    @click=\"spawnModal('refund', item.uniqueId, item.refundableQuantity)\">\n                                {{ $tc('vrpayment-order.buttons.label.refund-line-item-by-quantity') }}\n                            </sw-context-menu-item>\n\n                            <sw-context-menu-item\n                                    :disabled=\"transaction.state != 'FULFILL' || item.refundableQuantity == 0 || item.refundableAmount == 0 || item.itemRefundedQuantity > 0\"\n                                    @click=\"spawnModal('partialRefund', item.uniqueId, item.refundableQuantity, item.refundableAmount)\">\n                                {{ $tc('vrpayment-order.buttons.label.refund-line-item-parial') }}\n                            </sw-context-menu-item>\n                        </template>\n                    {% endblock %}\n                    {% block vrpayment_order_transaction_line_items_grid_bulk_actions %}\n                        <template #bulk>\n                            <a\n                                    class=\"link link-danger\"\n                                    role=\"link\"\n                                    tabindex=\"0\"\n                                    :disabled=\"selectedItems.length === 0\"\n                                    @click=\"onPerformBulkAction\">\n                                {{ $tc('vrpayment-order.buttons.label.refund-line-item-selected') }}\n                            </a>\n                        </template>\n                    {% endblock %}\n\n                    </sw-data-grid>\n                {% endblock %}\n            </template>\n        </mt-card>\n\t\t{% endblock %}\n\t\t{% block vrpayment_order_transaction_refunds_card %}\n\t\t<mt-card :title=\"$tc('vrpayment-order.refund.cardTitle')\" v-if=\"transactionData.refunds.length > 0\">\n\t\t\t<template #grid>\n\n\t\t\t\t{% block vrpayment_order_transaction_refunds_grid %}\n\t\t\t\t<sw-data-grid\n\t\t\t\t\t\t:dataSource=\"transactionData.refunds\"\n\t\t\t\t\t\t:columns=\"refundColumns\"\n\t\t\t\t\t\t:showActions=\"false\"\n\t\t\t\t\t\t:showSelection=\"false\">\n\t\t\t\t</sw-data-grid>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n\n\t\t</mt-card>\n\t\t{% endblock %}\n\t\t{% block vrpayment_order_actions_modal_refund_partial %}\n\t\t\t<vrpayment-order-action-refund-partial\n\t\t\t\t\tv-if=\"modalType === 'partialRefund'\"\n\t\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t\t@modal-close=\"closeModal\">\n\t\t\t</vrpayment-order-action-refund-partial>\n\t\t{% endblock %}\n\t\t{% block vrpayment_order_actions_modal_refund %}\n\t\t<vrpayment-order-action-refund\n\t\t\t\tv-if=\"modalType === 'refund'\"\n\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t@modal-close=\"closeModal\">\n\t\t</vrpayment-order-action-refund>\n\t\t{% endblock %}\n\t\t{% block vrpayment_order_actions_modal_refund_by_amount %}\n\t\t\t<vrpayment-order-action-refund-by-amount\n\t\t\t\t\tv-if=\"modalType === 'refundByAmount'\"\n\t\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t\t@modal-close=\"closeModal\">\n\t\t\t</vrpayment-order-action-refund-by-amount>\n\t\t{% endblock %}\n\t\t{% block vrpayment_order_actions_modal_completion%}\n\t\t<vrpayment-order-action-completion\n\t\t\t\tv-if=\"modalType === 'completion'\"\n\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t@modal-close=\"closeModal\">\n\t\t</vrpayment-order-action-completion>\n\t\t{% endblock %}\n\t\t{% block vrpayment_order_actions_modal_void %}\n\t\t<vrpayment-order-action-void\n\t\t\t\tv-if=\"modalType === 'void'\"\n\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t@modal-close=\"closeModal\">\n\t\t</vrpayment-order-action-void>\n\t\t{% endblock %}\n\t</div>\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</div>\n{% endblock %}\n","/* global Shopware */\n\nimport '../../component/vrpayment-order-action-completion';\nimport '../../component/vrpayment-order-action-refund';\nimport '../../component/vrpayment-order-action-refund-partial';\nimport '../../component/vrpayment-order-action-refund-by-amount';\nimport '../../component/vrpayment-order-action-void';\nimport template from './index.html.twig';\nimport './index.scss';\n\nconst {Component, Mixin, Filter, Context, Utils} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('vrpayment-order-detail', {\n\ttemplate,\n\n\tinject: [\n\t\t'VRPaymentTransactionService',\n\t\t'VRPaymentRefundService',\n\t\t'repositoryFactory'\n\t],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tdata() {\n\t\treturn {\n\t\t\ttransactionData: {\n\t\t\t\ttransactions: [],\n\t\t\t\trefunds: []\n\t\t\t},\n\t\t\ttransaction: {},\n\t\t\tlineItems: [],\n\t\t\trefundableQuantity: 0,\n\t\t\titemRefundableQuantity: 0,\n\t\t\tisLoading: true,\n\t\t\torderId: '',\n\t\t\tcurrency: '',\n\t\t\tmodalType: '',\n\t\t\trefundAmount: 0.00,\n\t\t\trefundableAmount: 0.00,\n\t\t\titemRefundedAmount: 0.00,\n\t\t\titemRefundedQuantity: 0,\n\t\t\titemRefundableAmount: 0.00,\n\t\t\tcurrentLineItem: '',\n\t\t\trefundLineItemQuantity: [],\n\t\t\trefundLineItemAmount: [],\n\t\t\tselectedItems: []\n\t\t};\n\t},\n\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$tc('vrpayment-order.header')\n\t\t};\n\t},\n\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t},\n\n\t\trelatedResourceColumns() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tproperty: 'paymentMethodName',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.transactionHistory.types.payment_method'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'state',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.transactionHistory.types.state'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'currency',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.transactionHistory.types.currency'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'authorized_amount',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.transactionHistory.types.authorized_amount'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'id',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.transactionHistory.types.transaction'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'customerId',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.transactionHistory.types.customer'),\n\t\t\t\t\trawData: true\n\t\t\t\t}\n\t\t\t];\n\t\t},\n\n\t\tlineItemColumns() {\n\t\t\treturn [\n\t\t\t    // It must be set in order to have correctly working checkbox mechanism\n\t\t\t\t{\n\t\t\t\t\tproperty: 'id',\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: false,\n\t\t\t\t\tprimary: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'uniqueId',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.lineItem.types.uniqueId'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: false,\n\t\t\t\t\tprimary: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'name',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.lineItem.types.name'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'quantity',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.lineItem.types.quantity'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'amountIncludingTax',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.lineItem.types.amountIncludingTax'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'type',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.lineItem.types.type'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'taxAmount',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.lineItem.types.taxAmount'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'refundableQuantity',\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\n\t\trefundColumns() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tproperty: 'id',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.id'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tprimary: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'amount',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.amount'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'state',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.state'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'createdOn',\n\t\t\t\t\tlabel: this.$tc('vrpayment-order.refund.types.createdOn'),\n\t\t\t\t\trawData: true\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\n\twatch: {\n\t\t'$route'() {\n\t\t\tthis.resetDataAttributes();\n\t\t\tthis.createdComponent();\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.orderId = this.$route.params.id;\n\t\t\tconst orderRepository = this.repositoryFactory.create('order');\n\t\t\tconst orderCriteria = new Criteria(1, 1);\n\t\t\torderCriteria.addAssociation('transactions');\n\t\t\torderCriteria.getAssociation('transactions').addSorting(Criteria.sort('createdAt', 'DESC'));\n\n\t\t\torderRepository.get(this.orderId, Context.api, orderCriteria).then((order) => {\n\t\t\t\tthis.order = order;\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tvar totalAmountTemp = 0;\n\t\t\t\tvar refundsAmountTemp = 0;\n\t\t\t\tconst vrpaymentTransactionId = order.transactions[0].customFields.vrpayment_transaction_id;\n\t\t\t\tthis.VRPaymentTransactionService.getTransactionData(order.salesChannelId, vrpaymentTransactionId)\n\t\t\t\t\t.then((VRPaymentTransaction) => {\n\t\t\t\t\t\tthis.currency = VRPaymentTransaction.transactions[0].currency;\n\n\t\t\t\t\t\tVRPaymentTransaction.transactions[0].authorized_amount = Utils.format.currency(\n\t\t\t\t\t\t\tVRPaymentTransaction.transactions[0].authorizationAmount,\n\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tVRPaymentTransaction.refunds.forEach((refund) => {\n\t\t\t\t\t\t\trefundsAmountTemp = parseFloat(parseFloat(refundsAmountTemp) + parseFloat(refund.amount));\n\t\t\t\t\t\t\trefund.amount = Utils.format.currency(\n\t\t\t\t\t\t\t\trefund.amount,\n\t\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\trefund.reductions.forEach((reduction) => {\n\t\t\t\t\t\t\t    if (reduction.quantityReduction > 0) {\n                                    if (this.refundLineItemQuantity[reduction.lineItemUniqueId] === undefined) {\n                                        this.refundLineItemQuantity[reduction.lineItemUniqueId] = reduction.quantityReduction;\n                                    } else {\n                                        this.refundLineItemQuantity[reduction.lineItemUniqueId] += reduction.quantityReduction;\n                                    }\n\t\t\t\t\t\t\t    }\n                                if (reduction.unitPriceReduction > 0) {\n                                    if (this.refundLineItemAmount[reduction.lineItemUniqueId] === undefined) {\n                                        this.refundLineItemAmount[reduction.lineItemUniqueId] = reduction.unitPriceReduction;\n                                    } else {\n                                        this.refundLineItemAmount[reduction.lineItemUniqueId] += reduction.unitPriceReduction;\n                                    }\n                                }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tVRPaymentTransaction.transactions[0].lineItems.forEach((lineItem) => {\n\t\t\t\t\t\t\tif (!lineItem.id) {\n\t\t\t\t\t\t\t\tlineItem.id = lineItem.uniqueId;\n                            }\n\n                            lineItem.itemRefundedAmount = parseFloat(this.refundLineItemAmount[lineItem.uniqueId] || 0) * parseInt(lineItem.quantity);\n                            lineItem.amountIncludingTax = parseFloat(lineItem.amountIncludingTax) || 0;\n\n                            lineItem.itemRefundedQuantity = parseInt(this.refundLineItemQuantity[lineItem.uniqueId]) || 0;\n                            lineItem.refundableAmount = parseFloat(\n                              (lineItem.amountIncludingTax - lineItem.itemRefundedAmount).toFixed(2)\n                            );\n\n\t\t\t\t\t\t\tlineItem.amountIncludingTax = Utils.format.currency(\n\t\t\t\t\t\t\t\tlineItem.amountIncludingTax,\n\t\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tlineItem.taxAmount = Utils.format.currency(\n\t\t\t\t\t\t\t\tlineItem.taxAmount,\n\t\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\ttotalAmountTemp = parseFloat(parseFloat(totalAmountTemp) + parseFloat(lineItem.unitPriceIncludingTax * lineItem.quantity));\n\n\t\t\t\t\t\t\tlineItem.refundableQuantity = parseInt(\n\t\t\t\t\t\t\t\tparseInt(lineItem.quantity) - parseInt(this.refundLineItemQuantity[lineItem.uniqueId] || 0)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.lineItems = VRPaymentTransaction.transactions[0].lineItems;\n\t\t\t\t\t\tthis.transactionData = VRPaymentTransaction;\n\t\t\t\t\t\tthis.transaction = this.transactionData.transactions[0];\n\t\t\t\t\t\tthis.refundAmount = Number(this.transactionData.transactions[0].amountIncludingTax);\n\t\t\t\t\t\tthis.refundableAmount = parseFloat(parseFloat(totalAmountTemp) - parseFloat(refundsAmountTemp));\n\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('vrpayment-order.paymentDetails.error.title'),\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('vrpayment-order.paymentDetails.error.title'),\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tdownloadPackingSlip() {\n\t\t\twindow.open(\n\t\t\t\tthis.VRPaymentTransactionService.getPackingSlip(\n\t\t\t\t\tthis.transaction.metaData.salesChannelId,\n\t\t\t\t\tthis.transaction.id\n\t\t\t\t),\n\t\t\t\t'_blank'\n\t\t\t);\n\t\t},\n\n\t\tdownloadInvoice() {\n\t\t\twindow.open(\n\t\t\t\tthis.VRPaymentTransactionService.getInvoiceDocument(\n\t\t\t\t\tthis.transaction.metaData.salesChannelId,\n\t\t\t\t\tthis.transaction.id\n\t\t\t\t),\n\t\t\t\t'_blank'\n\t\t\t);\n\t\t},\n\n\t\tresetDataAttributes() {\n\t\t\tthis.transactionData = {\n\t\t\t\ttransactions: [],\n\t\t\t\trefunds: []\n\t\t\t};\n\t\t\tthis.lineItems = [];\n\t\t\tthis.refundLineItemQuantity = [];\n\t\t\tthis.refundLineItemAmount = [];\n\t\t\tthis.isLoading = true;\n\t\t},\n\n\t\tspawnModal(modalType, lineItemId, refundableQuantity, itemRefundableAmount) {\n\t\t\tthis.modalType = modalType;\n\t\t\tthis.currentLineItem = lineItemId;\n\t\t\tthis.itemRefundableQuantity = refundableQuantity;\n            this.itemRefundableAmount = !isNaN(itemRefundableAmount) ? Math.round(itemRefundableAmount * 100) / 100 : 0;\n\t\t},\n\n\t\tcloseModal() {\n\t\t\tthis.modalType = '';\n\t\t},\n\n\t\tlineItemRefund(lineItemId) {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.VRPaymentRefundService.createRefund(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\t0,\n\t\t\t\tlineItemId\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('vrpayment-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('vrpayment-order.refundAction.successMessage')\n\t\t\t\t});\n                this.isLoading = false;\n                this.$emit('modal-close');\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n                });\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.response.data,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n                    this.isLoading = false;\n                    this.$emit('modal-close');\n                    this.$nextTick(() => {\n                        this.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n                    });\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tisSelectable(item) {\n\t\t\treturn item.refundableQuantity > 0 && item.refundableAmount > 0 && item.itemRefundedAmount == 0 && item.itemRefundedQuantity == 0;\n\t\t},\n\t\tonSelectionChanged(selection) {\n\t\t\tthis.selectedItems = Object.values(selection);\n\t\t},\n        onPerformBulkAction() {\n            if (this.selectedItems.length) {\n                // Set isLoading to true to show the loader\n                this.isLoading = true;\n\n                // Force the DOM to update before proceeding with the asynchronous operations\n                this.$nextTick(() => {\n                    const refundPromises = this.selectedItems.map((item) => {\n                        return this.lineItemRefundBulk(item.uniqueId); // Simulated refund action with delay\n                    });\n\n                    // Wait for all refund promises to complete\n                    Promise.all(refundPromises)\n                        .then(() => {\n                            // Once all promises are resolved, hide the loader and close the modal\n                            this.isLoading = false;\n                            this.$emit('modal-close');\n                            this.$nextTick(() => {\n                                this.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n                            });\n                        })\n                        .catch((error) => {\n                            // Handle any errors during the refund process\n                            this.createNotificationError({\n                                title: 'Error',\n                                message: 'Something went wrong with the refunds',\n                                autoClose: false\n                            });\n                            this.isLoading = false; // Ensure the loader is hidden even on error\n                        });\n                });\n            }\n        },\n        lineItemRefundBulk(lineItemId) {\n            return new Promise((resolve, reject) => {\n                this.VRPaymentRefundService.createRefund(\n                    this.transactionData.transactions[0].metaData.salesChannelId,\n                    this.transactionData.transactions[0].id,\n                    0,\n                    lineItemId\n                )\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('vrpayment-order.refundAction.successTitle'),\n                        message: this.$tc('vrpayment-order.refundAction.successMessage')\n                    });\n                    resolve();\n                })\n                .catch((errorResponse) => {\n                    try {\n                        this.createNotificationError({\n                            title: errorResponse.response.data.errors[0].title,\n                            message: errorResponse.response.data.errors[0].detail,\n                            autoClose: false\n                        });\n                    } catch (e) {\n                        this.createNotificationError({\n                            title: errorResponse.title,\n                            message: errorResponse.response.data,\n                            autoClose: false\n                        });\n                    } finally {\n                        reject();\n                    }\n                });\n            });\n        },\n\t}\n});\n","/* global Shopware */\n\nimport './extension/sw-order';\nimport './page/vrpayment-order-detail';\n\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\nimport frFR from './snippet/fr-FR.json';\nimport itIT from './snippet/it-IT.json';\n\nconst {Module} = Shopware;\n\nModule.register('vrpayment-order', {\n\ttype: 'plugin',\n\tname: 'VRPayment',\n\ttitle: 'vrpayment-order.general.title',\n\tdescription: 'vrpayment-order.general.descriptionTextModule',\n\tversion: '1.0.1',\n\ttargetVersion: '1.0.1',\n\tcolor: '#2b52ff',\n\n\tsnippets: {\n\t\t'de-DE': deDE,\n\t\t'en-GB': enGB,\n\t\t'fr-FR': frFR,\n\t\t'it-IT': itIT\n\t},\n\n\trouteMiddleware(next, currentRoute) {\n\t\tif (currentRoute.name === 'sw.order.detail') {\n\t\t\tcurrentRoute.children.push({\n\t\t\t\tcomponent: 'vrpayment-order-detail',\n\t\t\t\tname: 'vrpayment.order.detail',\n\t\t\t\tisChildren: true,\n\t\t\t\tpath: '/sw/order/vrpayment/detail/:id'\n\t\t\t});\n\t\t}\n\t\tnext(currentRoute);\n\t}\n});\n","Shopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'vrpayment',\n    key: 'vrpayment',\n    roles: {\n        viewer: {\n            privileges: [\n                'sales_channel:read',\n                'sales_channel_payment_method:read',\n                'system_config:read'\n            ],\n            dependencies: []\n        },\n        editor: {\n            privileges: [\n                'sales_channel:update',\n                'sales_channel_payment_method:create',\n                'sales_channel_payment_method:update',\n                'system_config:update',\n                'system_config:create',\n                'system_config:delete'\n            ],\n            dependencies: [\n                'vrpayment.viewer'\n            ]\n        }\n    }\n});\n\nShopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: null,\n    key: 'sales_channel',\n    roles: {\n        viewer: {\n            privileges: [\n                'sales_channel_payment_method:read'\n            ]\n        },\n        editor: {\n            privileges: [\n                'payment_method:update'\n            ]\n        },\n        creator: {\n            privileges: [\n                'payment_method:create',\n                'shipping_method:create',\n                'delivery_time:create'\n            ]\n        },\n        deleter: {\n            privileges: [\n                'payment_method:delete'\n            ]\n        }\n    }\n});\n","{% block vrpayment_settings %}\n    <sw-page class=\"vrpayment-settings\">\n\n        {% block vrpayment_settings_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc('sw-settings.index.title') }}\n                    <mt-icon name=\"small-arrow-medium-right\" size=\"16px\"></mt-icon>\n                    {{ $tc('vrpayment-settings.header') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block vrpayment_settings_actions %}\n            <template #smart-bar-actions>\n                {% block vrpayment_settings_actions_save %}\n                    <mt-button\n                            v-model:value=\"isSaveSuccessful\"\n                            class=\"sw-settings-login-registration__save-action\"\n                            variant=\"primary\"\n                            :isLoading=\"isLoading\"\n                            :disabled=\"isLoading\"\n                            @click=\"onSave\">\n                        {{ $tc('vrpayment-settings.settingForm.save') }}\n                    </mt-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block vrpayment_settings_content %}\n            <template #content>\n\n                {% block vrpayment_settings_content_card %}\n                    <mt-card-view>\n\n                        {% block vrpayment_settings_content_card_channel_config %}\n                            <sw-sales-channel-config v-model:value=\"config\"\n                                                        ref=\"configComponent\"\n                                                        :domain=\"CONFIG_DOMAIN\">\n\n                                {% block vrpayment_settings_content_card_channel_config_sales_channel %}\n                                    <template #select=\"{ onInput, selectedSalesChannelId, salesChannel }\">\n\n                                        {% block vrpayment_settings_content_card_channel_config_sales_channel_card %}\n                                            <mt-card title=\"Sales Channel Switch\">\n\n                                                {% block vrpayment_settings_content_card_channel_config_sales_channel_card_title %}\n                                                    <sw-single-select\n                                                            :value=\"selectedSalesChannelId\"\n                                                            :options=\"salesChannel.map(sc => ({ id: sc.id, name: sc.translated.name }))\"\n                                                            labelProperty=\"name\"\n                                                            valueProperty=\"id\"\n                                                            :isLoading=\"isLoading\"\n                                                            @update:value=\"onInput\"\n                                                    />\n                                                {% endblock %}\n                                                {% block vrpayment_settings_content_card_channel_config_sales_channel_card_footer %}\n                                                    <template #footer>\n\n                                                        {% block vrpayment_settings_content_card_channel_config_sales_channel_card_footer_container %}\n                                                            <sw-container columns=\"2fr 1fr\" gap=\"0px 30px\">\n\n                                                                {% block vrpayment_settings_content_card_channel_config_sales_channel_card_footer_container_text %}\n                                                                    <p>{{ $tc('vrpayment-settings.salesChannelCard.button.description') }}</p>\n                                                                {% endblock %}\n\n                                                                {% block vrpayment_settings_content_card_channel_config_sales_channel_card_footer_container_button %}\n                                                                    <sw-button\n                                                                            variant=\"primary\"\n                                                                            v-model:value=\"isSetDefaultPaymentSuccessful\"\n                                                                            :isLoading=\"isSettingDefaultPaymentMethods\"\n                                                                            @click=\"onSetPaymentMethodDefault\">\n                                                                        {{ $tc('vrpayment-settings.salesChannelCard.button.label') }}\n                                                                    </sw-button>\n                                                                {% endblock %}\n                                                            </sw-container>\n                                                        {% endblock %}\n                                                    </template>\n                                                {% endblock %}\n                                            </mt-card>\n                                        {% endblock %}\n                                    </template>\n                                {% endblock %}\n\n                                {% block vrpayment_settings_content_card_channel_config_cards %}\n                                    <template #content=\"{ actualConfigData, allConfigs, selectedSalesChannelId }\">\n                                        <div v-if=\"actualConfigData\">\n\n                                            <sw-vrpayment-credentials\n                                                    :actualConfigData=\"actualConfigData\"\n                                                    :allConfigs=\"allConfigs\"\n                                                    :selectedSalesChannelId=\"selectedSalesChannelId\"\n                                                    :spaceIdErrorState=\"spaceIdErrorState\"\n                                                    :userIdErrorState=\"userIdErrorState\"\n                                                    :applicationKeyErrorState=\"applicationKeyErrorState\"\n                                                    :spaceIdFilled=\"spaceIdFilled\"\n                                                    :userIdFilled=\"userIdFilled\"\n                                                    :applicationKeyFilled=\"applicationKeyFilled\"\n                                                    :isLoading=\"isLoading\"\n                                                    :isTesting=\"isTesting\"\n                                                    @check-api-connection-event=\"onCheckApiConnection\"\n                                            ></sw-vrpayment-credentials>\n\n                                            <sw-vrpayment-options\n                                                    :actualConfigData=\"actualConfigData\"\n                                                    :allConfigs=\"allConfigs\"\n                                                    :isLoading=\"isLoading\"\n                                                    :selectedSalesChannelId=\"selectedSalesChannelId\"\n                                            >\n                                            </sw-vrpayment-options>\n\n                                            <sw-vrpayment-storefront-options\n                                                    :actualConfigData=\"actualConfigData\"\n                                                    :allConfigs=\"allConfigs\"\n                                                    :isLoading=\"isLoading\"\n                                                    :selectedSalesChannelId=\"selectedSalesChannelId\"\n                                            >\n                                            </sw-vrpayment-storefront-options>\n\n                                            <sw-vrpayment-advanced-options\n                                                    :actualConfigData=\"actualConfigData\"\n                                                    :allConfigs=\"allConfigs\"\n                                                    :isLoading=\"isLoading\"\n                                                    :selectedSalesChannelId=\"selectedSalesChannelId\"\n                                            >\n                                            </sw-vrpayment-advanced-options>\n\n\n                                        </div>\n                                    </template>\n                                {% endblock %}\n\n                            </sw-sales-channel-config>\n                        {% endblock %}\n\n                        {% block vrpayment_settings_content_card_loading %}\n                            <mt-loader v-if=\"isLoading\"></mt-loader>\n                        {% endblock %}\n                    </mt-card-view>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n","export const CONFIG_DOMAIN = 'VRPaymentPayment.config';\nexport const CONFIG_APPLICATION_KEY = CONFIG_DOMAIN + '.' + 'applicationKey';\nexport const CONFIG_EMAIL_ENABLED = CONFIG_DOMAIN + '.' + 'emailEnabled';\nexport const CONFIG_INTEGRATION = CONFIG_DOMAIN + '.' + 'integration';\nexport const CONFIG_LINE_ITEM_CONSISTENCY_ENABLED = CONFIG_DOMAIN + '.' + 'lineItemConsistencyEnabled';\nexport const CONFIG_SPACE_ID = CONFIG_DOMAIN + '.' + 'spaceId';\nexport const CONFIG_SPACE_VIEW_ID = CONFIG_DOMAIN + '.' + 'spaceViewId';\nexport const CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED = CONFIG_DOMAIN + '.' + 'storefrontInvoiceDownloadEnabled';\nexport const CONFIG_USER_ID = CONFIG_DOMAIN + '.' + 'userId';\nexport const CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED = CONFIG_DOMAIN + '.' + 'storefrontWebhooksUpdateEnabled';\nexport const CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED = CONFIG_DOMAIN + '.' + 'storefrontPaymentsUpdateEnabled';\n\nexport default {\n    CONFIG_DOMAIN,\n    CONFIG_APPLICATION_KEY,\n    CONFIG_EMAIL_ENABLED,\n    CONFIG_INTEGRATION,\n    CONFIG_LINE_ITEM_CONSISTENCY_ENABLED,\n    CONFIG_SPACE_ID,\n    CONFIG_SPACE_VIEW_ID,\n    CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED,\n    CONFIG_USER_ID,\n    CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED,\n    CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED\n};","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from './configuration-constants';\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('vrpayment-settings', {\n\n    template: template,\n\n    inject: [\n        'acl',\n        'VRPaymentConfigurationService'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n\n            config: {},\n\n            isLoading: false,\n            isTesting: false,\n\n            isSaveSuccessful: false,\n\n            applicationKeyFilled: false,\n            applicationKeyErrorState: false,\n\n            spaceIdFilled: false,\n            spaceIdErrorState: false,\n\n            userIdFilled: false,\n            userIdErrorState: false,\n\n            isSetDefaultPaymentSuccessful: false,\n            isSettingDefaultPaymentMethods: false,\n\n            configIntegrationDefaultValue: 'payment_page',\n            configEmailEnabledDefaultValue: true,\n            configLineItemConsistencyEnabledDefaultValue: true,\n            configStorefrontInvoiceDownloadEnabledEnabledDefaultValue: true,\n            configStorefrontWebhooksUpdateEnabledDefaultValue: true,\n            configStorefrontPaymentsUpdateEnabledDefaultValue: true,\n\n            ...constants\n        };\n    },\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: true\n        }\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    watch: {\n        config: {\n            handler(configData) {\n                const defaultConfig = (this.$refs.configComponent.allConfigs || {}).null || {};\n                const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n                if (salesChannelId === null) {\n\n                    this.applicationKeyFilled = !!this.config[this.CONFIG_APPLICATION_KEY];\n                    this.spaceIdFilled = !!this.config[this.CONFIG_SPACE_ID];\n                    this.userIdFilled = !!this.config[this.CONFIG_USER_ID];\n\n                    if (!(this.CONFIG_INTEGRATION in this.config)) {\n                        this.config[this.CONFIG_INTEGRATION] = this.configIntegrationDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_EMAIL_ENABLED in this.config)) {\n                        this.config[this.CONFIG_EMAIL_ENABLED] = this.configEmailEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED in this.config)) {\n                        this.config[this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED] = this.configLineItemConsistencyEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED in this.config)) {\n                        this.config[this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED] = this.configStorefrontInvoiceDownloadEnabledEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED in this.config)) {\n                        this.config[this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED] = this.configStorefrontWebhooksUpdateEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED in this.config)) {\n                        this.config[this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED] = this.configStorefrontPaymentsUpdateEnabledDefaultValue;\n                    }\n\n                } else {\n\n                    this.applicationKeyFilled = !!this.config[this.CONFIG_APPLICATION_KEY] || !!defaultConfig[this.CONFIG_APPLICATION_KEY];\n                    this.spaceIdFilled = !!this.config[this.CONFIG_SPACE_ID] || !!defaultConfig[this.CONFIG_SPACE_ID];\n                    this.userIdFilled = !!this.config[this.CONFIG_USER_ID] || !!defaultConfig[this.CONFIG_USER_ID];\n\n\n                    if (!(this.CONFIG_INTEGRATION in this.config) || !(this.CONFIG_INTEGRATION in defaultConfig)) {\n                        this.config[this.CONFIG_INTEGRATION] = this.configIntegrationDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_EMAIL_ENABLED in this.config) || !(this.CONFIG_EMAIL_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_EMAIL_ENABLED] = this.configEmailEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED in this.config) || !(this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED] = this.configLineItemConsistencyEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED in this.config) || !(this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED] = this.configStorefrontInvoiceDownloadEnabledEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED in this.config) || !(this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED] = this.configStorefrontWebhooksUpdateEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED in this.config) || !(this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED] = this.configStorefrontPaymentsUpdateEnabledDefaultValue;\n                    }\n                }\n\n                this.$emit('salesChannelChanged');\n                this.$emit('update:value', configData);\n            },\n            deep: true\n        }\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkNumberFieldInheritance(value) {\n            if (typeof value !== 'number') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        getInheritValue(key) {\n            if (this.selectedSalesChannelId == null ) {\n                return this.actualConfigData[key];\n            } else {\n                return this.allConfigs['null'][key];\n            }\n        },\n\n        onSave() {\n            if (!(this.spaceIdFilled && this.userIdFilled && this.applicationKeyFilled)) {\n                this.setErrorStates();\n                return;\n            }\n            this.save();\n        },\n\n        save() {\n            this.isLoading = true;\n\n            this.$refs.configComponent.save().then((res) => {\n                if (res) {\n                    this.config = res;\n                }\n                this.registerWebHooks();\n                this.synchronizePaymentMethodConfiguration();\n                this.installOrderDeliveryStates();\n            }).catch((e) => {\n                console.error('Error:', e);\n                this.isLoading = false;\n            });\n        },\n\n        registerWebHooks() {\n            if (this.config[this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED] === false) {\n                return false;\n            }\n\n            this.VRPaymentConfigurationService.registerWebHooks(this.$refs.configComponent.selectedSalesChannelId)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('vrpayment-settings.settingForm.titleSuccess'),\n                        message: this.$tc('vrpayment-settings.settingForm.messageWebHookUpdated')\n                    });\n                }).catch((e) => {\n                    this.createNotificationError({\n                        title: this.$tc('vrpayment-settings.settingForm.titleError'),\n                        message: this.$tc('vrpayment-settings.settingForm.messageWebHookError')\n                    });\n                    this.isLoading = false;\n                    console.error('Error:', e);\n            });\n        },\n\n        synchronizePaymentMethodConfiguration() {\n            if (this.config[this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED] === false) {\n                return false;\n            }\n\n            this.VRPaymentConfigurationService.synchronizePaymentMethodConfiguration(this.$refs.configComponent.selectedSalesChannelId)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('vrpayment-settings.settingForm.titleSuccess'),\n                        message: this.$tc('vrpayment-settings.settingForm.messagePaymentMethodConfigurationUpdated')\n                    });\n                    this.isLoading = false;\n                }).catch((e) => {\n                    this.createNotificationError({\n                        title: this.$tc('vrpayment-settings.settingForm.titleError'),\n                        message: this.$tc('vrpayment-settings.settingForm.messagePaymentMethodConfigurationError')\n                    });\n                    this.isLoading = false;\n                    console.error('Error:', e);\n            });\n        },\n\n        installOrderDeliveryStates(){\n            this.VRPaymentConfigurationService.installOrderDeliveryStates()\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('vrpayment-settings.settingForm.titleSuccess'),\n                        message: this.$tc('vrpayment-settings.settingForm.messageOrderDeliveryStateUpdated')\n                    });\n                    this.isLoading = false;\n                }).catch(() => {\n                    this.createNotificationError({\n                        title: this.$tc('vrpayment-settings.settingForm.titleError'),\n                        message: this.$tc('vrpayment-settings.settingForm.messageOrderDeliveryStateError')\n                    });\n                    this.isLoading = false;\n            });\n        },\n\n        onSetPaymentMethodDefault() {\n            this.isSettingDefaultPaymentMethods = true;\n            this.VRPaymentConfigurationService.setVRPaymentAsSalesChannelPaymentDefault(\n                this.$refs.configComponent.selectedSalesChannelId\n            ).then(() => {\n                this.isSettingDefaultPaymentMethods = false;\n                this.isSetDefaultPaymentSuccessful = true;\n                this.createNotificationSuccess({\n                    title: this.$tc('vrpayment-settings.settingForm.titleSuccess'),\n                    message: this.$tc('vrpayment-settings.salesChannelCard.messageDefaultPaymentUpdated')\n                });\n            });\n        },\n\n        setErrorStates() {\n            const messageNotBlankErrorState = {\n                code: 1,\n                detail: this.$tc('vrpayment-settings.messageNotBlank')\n            };\n\n            if (!this.spaceIdFilled) {\n                this.spaceIdErrorState = messageNotBlankErrorState;\n            }\n\n            if (!this.userIdFilled) {\n                this.userIdErrorState = messageNotBlankErrorState;\n            }\n\n            if (!this.applicationKeyFilled) {\n                this.applicationKeyErrorState = messageNotBlankErrorState;\n            }\n        },\n\n        // Handles the 'check-api-connection-event'.\n        // Uses the provided apiConnectionData to perform API connection checks.\n        onCheckApiConnection(apiConnectionData) {\n            const { spaceId, userId, applicationKey } = apiConnectionData;\n            this.isTesting = true;\n\n            this.VRPaymentConfigurationService.checkApiConnection(spaceId, userId, applicationKey)\n                .then((res) => {\n                    if (res.result === 200) {\n                        this.createNotificationSuccess({\n                            title: this.$tc('vrpayment-settings.settingForm.credentials.alert.title'),\n                            message: this.$tc('vrpayment-settings.settingForm.credentials.alert.successMessage')\n                        });\n                    } else {\n                        this.createNotificationError({\n                            title: this.$tc('vrpayment-settings.settingForm.credentials.alert.title'),\n                            message: this.$tc('vrpayment-settings.settingForm.credentials.alert.errorMessage')\n                        });\n                    }\n                    this.isTesting = false;\n                }).catch(() => {\n                    this.createNotificationError({\n                        title: this.$tc('vrpayment-settings.settingForm.credentials.alert.title'),\n                        message: this.$tc('vrpayment-settings.settingForm.credentials.alert.errorMessage')\n                    });\n                    this.isTesting = false;\n            });\n        }\n    }\n});\n","{% block vrpayment_settings_content_card_channel_config_credentials %}\n\t<mt-card\n\t\t\tclass=\"mt-card\"\n\t\t\t:title=\"$tc('vrpayment-settings.settingForm.credentials.cardTitle')\"\n\t\t\tv-if=\"actualConfigData\"\n\t>\n\n\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container %}\n\t\t\t<sw-container>\n\n\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings %}\n\t\t\t\t\t<div v-if=\"actualConfigData\" class=\"vrpayment-settings-credentials-fields\">\n\n\t\t\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings_space_id %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_SPACE_ID]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"getInheritedValue(CONFIG_SPACE_ID)\"\n\t\t\t\t\t\t\t\t\t@update:value=\"onSwitchInput\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-number-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_SPACE_ID\"\n\t\t\t\t\t\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.credentials.spaceId.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.credentials.spaceId.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"!acl.can('vrpayment.editor')\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t:error=\"spaceIdErrorState\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-number-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings_user_id %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_USER_ID]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"getInheritedValue(CONFIG_USER_ID)\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkNumberFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-number-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_USER_ID\"\n\t\t\t\t\t\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.credentials.userId.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.credentials.userId.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"!acl.can('vrpayment.editor')\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t:error=\"userIdErrorState\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-number-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings_application_key %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_APPLICATION_KEY]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"getInheritedValue(CONFIG_APPLICATION_KEY)\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkTextFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-password-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_APPLICATION_KEY\"\n\t\t\t\t\t\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:passwordToggleAble=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.credentials.applicationKey.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.credentials.applicationKey.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"!acl.can('vrpayment.editor')\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t:error=\"applicationKeyErrorState\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-password-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\n\t\t\t\t{% verbatim %}\n\t\t\t\t<sw-container columns=\"1fr 1fr\" gap=\"0px 30px\">\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t:isLoading=\"isTesting\"\n\t\t\t\t\t\t\t@click=\"emitCheckApiConnectionEvent\">\n\t\t\t\t\t\t{{ $tc('vrpayment-settings.settingForm.credentials.button.label') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t</sw-container>\n\t\t\t\t{% endverbatim %}\n\n\t\t\t</sw-container>\n\t\t{% endblock %}\n\t</mt-card>\n\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/vrpayment-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-vrpayment-credentials', {\n    template,\n\n    name: 'VRPaymentCredentials',\n\n    inject: [\n        'acl'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true\n        },\n        allConfigs: {\n            type: Object,\n            required: true\n        },\n\n        selectedSalesChannelId: {\n            type: [String, null],\n            required: false,\n            default: null\n        },\n        spaceIdFilled: {\n            type: Boolean,\n            required: true\n        },\n        spaceIdErrorState: {\n            required: true\n        },\n        userIdFilled: {\n            type: Boolean,\n            required: true\n        },\n        userIdErrorState: {\n            required: true\n        },\n        applicationKeyFilled: {\n            type: Boolean,\n            required: true\n        },\n        applicationKeyErrorState: {\n            required: true\n        },\n        isLoading: {\n            type: Boolean,\n            required: true\n        },\n        isTesting: {\n            type: Boolean,\n            required: false\n        }\n    },\n\n    data() {\n        return {\n            ...constants\n        };\n    },\n\n    computed: {\n        currentConfig() {\n            if (this.selectedSalesChannelId && this.allConfigs[this.selectedSalesChannelId]) {\n                return this.allConfigs[this.selectedSalesChannelId];\n            }\n            return this.allConfigs['null'] || {};\n        }\n    },\n\n    methods: {\n\t\tcheckTextFieldInheritance(value) {\n\t\t    return !value || value.length <= 0;\n\t\t},\n\n\t\tcheckNumberFieldInheritance(value) {\n\t\t    return value == null || value === '';\n\t\t},\n\n\t\tcheckBoolFieldInheritance(value) {\n\t\t    return typeof value !== 'boolean';\n\t\t},\n\n        // Emits the 'check-api-connection-event' with the current API connection parameters.\n        // Used to trigger API connection testing from this component.\n        emitCheckApiConnectionEvent() {\n            const apiConnectionParams = {\n                spaceId: this.currentConfig[constants.CONFIG_SPACE_ID],\n                userId: this.currentConfig[constants.CONFIG_USER_ID],\n                applicationKey: this.currentConfig[constants.CONFIG_APPLICATION_KEY]\n            };\n\n            this.$emit('check-api-connection-event', apiConnectionParams);\n        },\n\n        getInheritedValue(key) {\n            return this.allConfigs['null']?.[key] ?? null;\n        }\n    }\n});\n","{% block vrpayment_settings_content_card_channel_config_options %}\n\t<mt-card class=\"mt-card\"\n\t\t\t :title=\"$tc('vrpayment-settings.settingForm.options.cardTitle')\">\n\n\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container %}\n\t\t\t<sw-container>\n\n\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings %}\n\t\t\t\t\t<div v-if=\"actualConfigData\" class=\"vrpayment-settings-options-fields\">\n\n\t\t\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings_space_view_id %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_SPACE_VIEW_ID]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId === null ? null : allConfigs['null'][CONFIG_SPACE_VIEW_ID]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkNumberFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-number-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_SPACE_VIEW_ID\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.options.spaceViewId.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.options.spaceViewId.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-number-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings_integration %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_INTEGRATION]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId === null ? null : allConfigs['null'][CONFIG_INTEGRATION]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkTextFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<sw-single-select\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_INTEGRATION\"\n\t\t\t\t\t\t\t\t\t\t\tlabelProperty=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tvalueProperty=\"id\"\n\t\t\t\t\t\t\t\t\t\t\t:options=\"integrationOptions\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.options.integration.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.options.integration.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings_line_item_consistency_enabled %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_LINE_ITEM_CONSISTENCY_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_LINE_ITEM_CONSISTENCY_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<sw-switch-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_LINE_ITEM_CONSISTENCY_ENABLED\"\n\t\t\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.options.lineItemConsistencyEnabled.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.options.lineItemConsistencyEnabled.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</sw-switch-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block vrpayment_settings_content_card_channel_config_credentials_card_container_settings_email_enabled %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_EMAIL_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_EMAIL_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<sw-switch-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_EMAIL_ENABLED\"\n\t\t\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.options.emailEnabled.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.options.emailEnabled.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</sw-switch-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n\t\t{% endblock %}\n\t</mt-card>\n\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/vrpayment-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-vrpayment-options', {\n\ttemplate: template,\n\n\tname: 'VRPaymentOptions',\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\tactualConfigData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tallConfigs: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tselectedSalesChannelId: {\n\t\t\trequired: true\n\t\t},\n\t\tisLoading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t...constants\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tintegrationOptions() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'payment_page',\n\t\t\t\t\tname: this.$tc('vrpayment-settings.settingForm.options.integration.options.payment_page')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'iframe',\n\t\t\t\t\tname: this.$tc('vrpayment-settings.settingForm.options.integration.options.iframe')\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\n\tmethods: {\n\t\tcheckTextFieldInheritance(value) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckNumberFieldInheritance(value) {\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckBoolFieldInheritance(value) {\n\t\t\treturn typeof value !== 'boolean';\n\t\t}\n\t}\n});\n","{% block vrpayment_settings_icon %}\n    <span class=\"mt-icon icon--vrpayment-multicolor mt-icon--multicolor\" style=\"width: 16px; height: 16px;\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" contentScriptType=\"text/ecmascript\" y=\"0px\" zoomAndPan=\"magnify\" style=\"enable-background:new 0 0 632.126 170.079;\" contentStyleType=\"text/css\" viewBox=\"0 0 632.126 170.079\" preserveAspectRatio=\"xMidYMid meet\" xml:space=\"preserve\" version=\"1.1\">\n<style type=\"text/css\" xml:space=\"preserve\">\n\t.st0{fill:none;}\n\t.st1{fill:#0066B3;}\n\t.st2{fill:#FFFFFF;}\n\t.st3{fill:#FF6600;}\n</style>\n<g id=\"Box\">\n\t<rect class=\"st0\" height=\"170.079\" width=\"632.126\"/>\n</g>\n<g id=\"Logo\">\n\t<path class=\"st1\" d=\"M181.838,87.685c0.482,1.499,0.91,2.824,1.285,3.975c0.374,1.152,0.775,2.449,1.204,3.894   c0.428,1.393,0.803,2.663,1.124,3.814c0.321,1.152,0.695,2.423,1.124,3.814c0.428-1.391,0.829-2.69,1.204-3.894   c0.374-1.204,0.735-2.395,1.084-3.573c0.347-1.177,0.709-2.369,1.084-3.573c0.374-1.205,0.775-2.502,1.204-3.894l10.117-31.554   h11.241l-19.35,56.685h-13.971l-19.591-56.685h12.124L181.838,87.685z\"/>\n\t<path class=\"st1\" d=\"M257.668,113.378h-12.686l-5.46-14.212c-0.857-2.034-1.58-3.693-2.168-4.978   c-0.589-1.285-1.419-2.329-2.489-3.132c-0.429-0.321-0.817-0.548-1.164-0.683c-0.349-0.133-0.737-0.253-1.164-0.361   c-0.536-0.107-1.339-0.173-2.409-0.2c-1.071-0.027-2.302-0.04-3.693-0.04v23.605h-11.482V56.693h17.423   c1.23,0,2.635,0.027,4.215,0.08c1.578,0.054,3.184,0.241,4.818,0.562c1.632,0.321,3.224,0.817,4.777,1.485   c1.552,0.67,2.917,1.62,4.095,2.85c0.374,0.375,0.709,0.791,1.004,1.245c0.293,0.455,0.574,0.897,0.843,1.325   c0.428,0.803,0.763,1.594,1.004,2.368c0.241,0.777,0.414,1.513,0.522,2.208c0.107,0.696,0.173,1.298,0.201,1.806   c0.026,0.509,0.04,0.871,0.04,1.084c0,2.73-0.522,4.978-1.566,6.744c-1.043,1.766-2.262,3.159-3.653,4.175   c-0.268,0.161-0.522,0.321-0.763,0.482c-0.241,0.161-0.576,0.349-1.004,0.562c-0.911,0.429-1.807,0.723-2.69,0.883   c-0.883,0.161-1.78,0.295-2.69,0.402c0.107,0.054,0.374,0.108,0.803,0.16c0.428,0.054,0.856,0.134,1.285,0.241   c0.695,0.268,1.325,0.67,1.887,1.204c0.562,0.536,1.07,1.124,1.525,1.767c0.454,0.642,0.829,1.312,1.124,2.007   c0.294,0.696,0.574,1.312,0.843,1.847L257.668,113.378z M226.275,80.86c0.909,0.054,1.766,0.08,2.569,0.08c0.855,0,1.739,0,2.649,0   c0.695,0,1.458-0.012,2.288-0.04c0.829-0.026,1.659-0.161,2.489-0.401c0.829-0.241,1.632-0.615,2.409-1.124   c0.775-0.508,1.485-1.217,2.127-2.128c0.267-0.428,0.548-1.016,0.843-1.766c0.294-0.749,0.414-1.632,0.361-2.65   c0-0.964-0.134-1.793-0.401-2.489c-0.269-0.695-0.536-1.257-0.803-1.686c-0.696-0.964-1.606-1.686-2.73-2.168   c-1.124-0.482-2.569-0.775-4.336-0.883c-0.429,0-0.777-0.013-1.044-0.04c-0.268-0.026-0.59-0.04-0.964-0.04h-5.46V80.86z\"/>\n\t<path class=\"st1\" d=\"M295.251,56.693c2.301,0,4.643,0.12,7.026,0.361c2.381,0.241,4.723,1.031,7.025,2.369   c1.124,0.697,2.114,1.433,2.971,2.208c0.856,0.776,1.659,1.754,2.409,2.931c0.695,1.071,1.231,2.115,1.606,3.131   c0.374,1.018,0.642,1.955,0.803,2.81c0.161,0.857,0.254,1.62,0.281,2.288c0.026,0.67,0.04,1.164,0.04,1.485   c0,0.321-0.028,0.963-0.08,1.927c-0.054,0.964-0.281,2.075-0.683,3.332c-0.401,1.258-1.017,2.597-1.847,4.014   c-0.83,1.419-2.021,2.77-3.573,4.055c-0.375,0.268-1.071,0.75-2.087,1.445c-2.195,1.339-4.51,2.182-6.945,2.529   c-2.436,0.349-4.751,0.496-6.945,0.441c-0.75,0-1.513-0.012-2.288-0.04c-0.776-0.026-1.539-0.04-2.288-0.04v21.438h-11.482V56.693   H295.251z M290.514,82.948c0.588,0.054,1.151,0.094,1.686,0.12c0.534,0.028,1.096,0.04,1.686,0.04c0.909,0,1.793-0.026,2.65-0.08   c0.855-0.053,1.712-0.213,2.569-0.482c1.552-0.428,2.917-1.176,4.095-2.248c1.498-1.659,2.248-3.72,2.248-6.182   c0-1.552-0.375-3.064-1.124-4.537c-0.75-1.471-2.088-2.582-4.015-3.332c-0.75-0.267-1.62-0.482-2.61-0.642   c-0.991-0.16-2.316-0.241-3.974-0.241c-0.536,0-1.058,0.014-1.566,0.04c-0.51,0.027-1.058,0.04-1.646,0.04V82.948z\"/>\n\t<path class=\"st1\" d=\"M343.602,113.378v-6.182c-0.321,0.59-0.817,1.298-1.485,2.128c-0.67,0.83-1.7,1.674-3.091,2.529   c-1.553,0.911-3.119,1.513-4.697,1.807c-1.58,0.294-3.145,0.442-4.697,0.442c-2.89,0-5.259-0.429-7.106-1.285   c-1.847-0.855-3.306-1.939-4.376-3.252c-1.071-1.311-1.794-2.716-2.168-4.215c-0.375-1.498-0.562-2.891-0.562-4.175   c0.053-2.248,0.468-4.107,1.244-5.58c0.775-1.472,1.699-2.662,2.77-3.573c1.712-1.552,4.014-2.702,6.905-3.452   c2.891-0.749,6.423-1.15,10.598-1.204h0.482c1.07,0,2.02,0.014,2.85,0.04c0.829,0.028,1.779,0.094,2.85,0.201   c-0.108-0.964-0.214-1.993-0.321-3.091c-0.107-1.096-0.507-2.127-1.202-3.091c-0.642-0.91-1.497-1.632-2.565-2.168   c-1.069-0.534-2.51-0.855-4.327-0.964h-1.043c-2.031,0.054-3.755,0.295-5.17,0.723c-1.416,0.429-2.552,0.83-3.406,1.204   c-0.428,0.215-0.988,0.496-1.683,0.843c-0.695,0.349-1.549,0.923-2.564,1.726l-0.321-9.475c0.856-0.321,1.75-0.642,2.686-0.963   c0.936-0.321,1.965-0.615,3.087-0.883c1.123-0.267,2.392-0.494,3.81-0.682c1.416-0.187,3.007-0.281,4.771-0.281   c1.016,0,2.112,0.028,3.288,0.08c1.177,0.054,2.34,0.228,3.489,0.522c1.149,0.295,2.298,0.71,3.448,1.244   c1.149,0.536,2.232,1.232,3.248,2.088c0.535,0.482,1.163,1.152,1.886,2.007c0.721,0.857,1.296,1.955,1.724,3.292   c0.535,1.393,0.842,3.051,0.922,4.978c0.08,1.927,0.121,3.587,0.121,4.978v9.956c0,2.517,0.026,4.805,0.08,6.865   c0.053,2.061,0.133,4.35,0.241,6.865H343.602z M343.361,94.349c-0.692-0.053-1.372-0.093-2.037-0.12   c-0.666-0.026-1.372-0.04-2.118-0.04c-2.878,0-5.355,0.281-7.432,0.843c-2.078,0.562-3.569,1.646-4.474,3.252   c-0.427,0.803-0.64,1.714-0.64,2.73c0,0.59,0.107,1.218,0.32,1.887c0.213,0.67,0.572,1.298,1.079,1.887   c0.506,0.59,1.172,1.071,1.997,1.445c0.826,0.375,1.877,0.562,3.156,0.562c0.638,0,1.45-0.12,2.436-0.362   c0.985-0.241,1.984-0.695,2.996-1.365c1.011-0.669,1.931-1.606,2.756-2.81c0.826-1.205,1.399-2.77,1.719-4.697   c0.107-0.588,0.173-1.257,0.201-2.007C343.347,94.805,343.361,94.403,343.361,94.349z\"/>\n\t<path class=\"st1\" d=\"M370.828,90.415c0.374,1.285,0.735,2.503,1.084,3.653c0.348,1.152,0.683,2.288,1.004,3.412   c0.321,1.124,0.643,2.262,0.964,3.412c0.321,1.152,0.669,2.368,1.044,3.653c0.588-2.409,1.177-4.576,1.766-6.503   c0.588-1.927,1.257-4.067,2.007-6.423l6.423-20.313h11.08l-16.058,43.116c-1.071,2.943-2.061,5.406-2.971,7.387   c-0.91,1.98-1.954,3.586-3.131,4.817c-0.642,0.749-1.272,1.351-1.887,1.807c-0.616,0.454-1.031,0.735-1.245,0.843   c-1.393,0.803-2.824,1.351-4.296,1.646c-1.473,0.294-2.878,0.442-4.215,0.442c-0.911,0-1.887-0.068-2.931-0.202   c-1.044-0.137-2.477-0.42-4.296-0.852l0.803-8.26c0.909,0.267,1.686,0.468,2.328,0.602c0.642,0.133,1.391,0.201,2.248,0.201   c1.498,0,2.742-0.267,3.733-0.801c0.99-0.535,1.793-1.19,2.409-1.964c0.615-0.777,1.096-1.564,1.445-2.365   c0.347-0.803,0.602-1.471,0.763-2.005l-16.379-44.412h11.883L370.828,90.415z\"/>\n\t<path class=\"st1\" d=\"M461.368,113.378h-10.839V91.78c0-2.622-0.108-4.817-0.321-6.584c-0.215-1.766-0.991-3.184-2.329-4.255   c-0.857-0.588-1.674-0.936-2.449-1.044c-0.776-0.107-1.272-0.161-1.485-0.161c-1.124,0-2.061,0.188-2.811,0.562   c-0.75,0.375-1.339,0.75-1.766,1.124c-0.911,0.803-1.62,1.766-2.128,2.89c-0.509,1.124-0.883,2.276-1.124,3.453   c-0.241,1.178-0.389,2.342-0.442,3.493c-0.054,1.152-0.08,2.155-0.08,3.011c-0.054,0.536-0.08,1.018-0.08,1.445   c0,0.429,0,0.937,0,1.526v16.138h-10.839V89.451c0-0.588-0.014-1.271-0.04-2.048c-0.027-0.775-0.12-1.551-0.281-2.328   c-0.161-0.775-0.415-1.526-0.763-2.248c-0.349-0.723-0.87-1.378-1.565-1.967c-0.751-0.642-1.513-1.016-2.289-1.124   c-0.776-0.107-1.272-0.16-1.485-0.16c-0.321,0-0.937,0.094-1.847,0.281c-0.911,0.188-1.847,0.656-2.81,1.405   c-1.553,1.232-2.597,2.798-3.132,4.697c-0.535,1.901-0.803,4.376-0.803,7.427v19.993h-10.919V79.174   c-0.054-1.445-0.094-2.756-0.121-3.934c-0.028-1.177-0.068-2.489-0.121-3.934h10.438v6.423c0.642-0.91,1.164-1.592,1.565-2.047   c0.402-0.454,0.816-0.87,1.245-1.245c1.07-0.963,2.168-1.699,3.292-2.208c1.124-0.508,2.18-0.883,3.171-1.124   c0.99-0.241,1.847-0.388,2.569-0.442c0.723-0.053,1.217-0.08,1.485-0.08c0.856,0,1.739,0.08,2.65,0.241   c0.909,0.16,1.833,0.441,2.77,0.843c0.936,0.401,1.833,0.937,2.69,1.606c0.856,0.67,1.659,1.539,2.409,2.609   c0.321,0.536,0.562,0.977,0.723,1.325c0.161,0.349,0.374,0.791,0.642,1.325c0.482-0.803,0.91-1.431,1.285-1.887   c0.374-0.454,0.723-0.843,1.044-1.164c1.124-1.285,2.328-2.248,3.613-2.891c1.285-0.642,2.475-1.11,3.573-1.405   c1.096-0.294,2.06-0.454,2.89-0.482c0.829-0.026,1.378-0.04,1.646-0.04c0.321,0,0.91,0.028,1.766,0.08   c0.856,0.054,1.833,0.281,2.931,0.682c1.096,0.402,2.221,1.058,3.372,1.967c1.151,0.911,2.181,2.195,3.091,3.854   c0.963,1.874,1.538,3.693,1.726,5.46c0.187,1.767,0.281,3.561,0.281,5.38V113.378z\"/>\n\t<path class=\"st1\" d=\"M475.684,96.116c0.053,0.108,0.187,0.63,0.401,1.565c0.213,0.937,0.588,1.807,1.124,2.61   c0.695,1.178,1.512,2.128,2.449,2.85c0.936,0.723,1.899,1.285,2.891,1.686c0.99,0.401,1.993,0.682,3.011,0.843   c1.017,0.161,1.98,0.241,2.891,0.241c1.606,0,3.252-0.187,4.938-0.562c1.686-0.374,3.332-0.963,4.938-1.767   c0.642-0.267,1.297-0.615,1.967-1.044c0.669-0.428,1.084-0.695,1.244-0.803l0.161,9.394c-1.606,0.696-3.546,1.392-5.821,2.087   c-2.276,0.695-5.179,1.044-8.711,1.044c-0.321,0-0.803,0-1.445,0c-0.642,0-1.379-0.04-2.208-0.12   c-0.831-0.08-1.754-0.228-2.77-0.441c-1.017-0.214-2.035-0.508-3.051-0.883c-1.66-0.642-3.252-1.512-4.778-2.609   c-1.525-1.097-2.864-2.462-4.014-4.095c-1.152-1.632-2.075-3.545-2.77-5.741c-0.696-2.194-1.044-4.71-1.044-7.548   c0-2.622,0.241-4.844,0.723-6.664c0.482-1.819,0.964-3.264,1.445-4.336c0.267-0.482,0.534-0.99,0.803-1.526   c0.267-0.534,0.428-0.855,0.482-0.964c0.267-0.374,0.522-0.735,0.763-1.084c0.241-0.347,0.522-0.682,0.843-1.004   c1.552-1.873,3.559-3.479,6.022-4.817c2.461-1.337,5.566-2.007,9.314-2.007c3.425,0,6.329,0.59,8.712,1.767   c2.381,1.178,4.336,2.744,5.861,4.697c1.525,1.955,2.636,4.229,3.332,6.825c0.695,2.597,1.044,5.313,1.044,8.149   c0,0.75,0,1.473,0,2.168c0,0.642-0.028,1.339-0.08,2.088H475.684z M494.391,88.488c-0.108-1.177-0.268-2.341-0.482-3.493   c-0.214-1.15-0.75-2.288-1.606-3.412c-0.642-0.855-1.312-1.512-2.007-1.967c-0.697-0.454-1.365-0.789-2.007-1.004   c-0.642-0.213-1.218-0.348-1.726-0.402c-0.509-0.053-0.871-0.08-1.084-0.08c-0.161,0-0.536,0.027-1.124,0.08   c-0.59,0.054-1.272,0.201-2.048,0.442c-0.776,0.241-1.58,0.642-2.409,1.204c-0.831,0.562-1.593,1.353-2.288,2.369   c-0.857,1.393-1.379,2.677-1.566,3.854c-0.188,1.178-0.309,1.981-0.361,2.409H494.391z\"/>\n\t<path class=\"st1\" d=\"M536.72,113.378V93.065c-0.054-2.515-0.161-4.509-0.321-5.982c-0.16-1.472-0.535-2.796-1.124-3.975   c-0.375-0.695-0.803-1.271-1.285-1.726c-0.482-0.454-1.098-0.869-1.847-1.245c-0.268-0.107-0.682-0.241-1.244-0.401   c-0.562-0.16-1.218-0.241-1.967-0.241c-0.375-0.053-1.084,0.014-2.128,0.201c-1.044,0.188-2.155,0.737-3.332,1.646   c-0.964,0.75-1.726,1.58-2.288,2.489c-0.562,0.911-0.977,1.901-1.245,2.971c-0.268,1.071-0.455,2.181-0.562,3.332   c-0.108,1.152-0.16,2.342-0.16,3.573v19.671h-11V81.423c0-1.873-0.027-3.559-0.08-5.059c-0.054-1.498-0.134-3.184-0.241-5.058   h10.518v6.503c0.482-0.642,1.017-1.285,1.606-1.927c0.803-0.91,1.606-1.606,2.409-2.087c0.803-0.482,1.338-0.803,1.606-0.964   c1.606-0.909,3.104-1.498,4.496-1.766c1.391-0.267,2.863-0.401,4.416-0.401c2.034,0,3.706,0.214,5.018,0.642   c1.311,0.429,2.395,0.91,3.252,1.445c0.428,0.268,0.95,0.656,1.566,1.164c0.615,0.509,1.297,1.298,2.047,2.369   c0.642,0.857,1.137,1.794,1.485,2.81c0.347,1.017,0.602,2.141,0.763,3.372c0.161,1.232,0.267,2.623,0.321,4.175   c0.053,1.553,0.107,3.292,0.16,5.219v21.518H536.72z\"/>\n\t<path class=\"st1\" d=\"M567.149,71.306h9.876v8.19h-9.876v18.467c0.107,2.035,0.602,3.707,1.485,5.018   c0.883,1.312,2.529,1.967,4.938,1.967c0.91,0,1.699-0.08,2.369-0.241c0.669-0.161,1.164-0.294,1.485-0.401l0.241,8.591   c-1.714,0.429-3.091,0.723-4.135,0.883c-1.044,0.161-1.995,0.241-2.85,0.241c-2.356,0-4.35-0.295-5.982-0.883   c-1.634-0.588-2.931-1.311-3.894-2.168c-1.071-0.909-1.941-2.088-2.61-3.533c-0.67-1.445-1.138-3.292-1.405-5.54   c-0.108-1.07-0.161-2.007-0.161-2.81c0-0.855,0-1.498,0-1.927V79.495h-8.109v-8.19h8.109v-8.431l10.518-3.372V71.306z\"/>\n\t<rect width=\"84.237\" x=\"56.693\" height=\"56.693\" y=\"56.693\" class=\"st2\"/>\n\t<path class=\"st3\" d=\"M140.93,113.386v-9.971h-32.11c-0.875,4.577-1.614,8.458-1.901,9.971H140.93L140.93,113.386z\"/>\n\t<polygon class=\"st3\" points=\"56.693,103.415 56.693,113.386 90.463,113.386 88.209,103.415 56.693,103.415  \"/>\n\t<path class=\"st1\" d=\"M73.288,79.881l-2.455-10.294h20.965l6.942,30.277l4.421-19.656c2.159-8.599,2.974-10.621,15.12-10.621   c2.637,0,8.742,0,8.742,0s-1.768,7.922-3.956,16.517c-0.84,3.345-8.144,2.942-7.773-0.17c0.039-0.32,0.38-2.619,0.652-4.259   c0.403-2.367-2.372-2.656-2.866-0.321c-0.357,1.669-1.957,10.071-3.457,17.872h31.307V56.693H56.693v42.532h30.572L82.91,79.898   L73.288,79.881L73.288,79.881z\"/>\n</g>\n</svg>\n\n    </span>\n{% endblock %}\n","import template from './index.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('sw-vrpayment-settings-icon', {\n    template\n});\n","<mt-card class=\"mt-card\"\n\t\t :title=\"$tc('vrpayment-settings.settingForm.storefrontOptions.cardTitle')\">\n\t<sw-container>\n\t\t<div v-if=\"actualConfigData\" class=\"vrpayment-settings-storefront-options-fields\">\n\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED]\"\n\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED]\"\n\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t<sw-switch-field\n\t\t\t\t\t\t\t:name=\"CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED\"\n\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.storefrontOptions.invoiceDownloadEnabled.label')\"\n\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.storefrontOptions.invoiceDownloadEnabled.tooltipText')\"\n\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t:value=\"props.currentValue\"\n\t\t\t\t\t\t\t@update:value=\"props.updateCurrentValue\">\n\t\t\t\t\t</sw-switch-field>\n\t\t\t\t</template>\n\t\t\t</sw-inherit-wrapper>\n\t\t</div>\n\t</sw-container>\n</mt-card>\n\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/vrpayment-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-vrpayment-storefront-options', {\n\ttemplate: template,\n\n\tname: 'VRPaymentStorefrontOptions',\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\tactualConfigData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tallConfigs: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tselectedSalesChannelId: {\n\t\t\trequired: true\n\t\t},\n\t\tisLoading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t...constants\n\t\t};\n\t},\n\n\tmethods: {\n\t\tcheckTextFieldInheritance(value) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckNumberFieldInheritance(value) {\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckBoolFieldInheritance(value) {\n\t\t\treturn typeof value !== 'boolean';\n\t\t}\n\t}\n});\n","<mt-card class=\"mt-card\"\n\t\t :title=\"$tc('vrpayment-settings.settingForm.advancedOptions.cardTitle')\">\n\t<sw-container>\n\t\t<div v-if=\"actualConfigData\" class=\"vrpayment-settings-advanced-options-fields\">\n\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED]\"\n\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED]\"\n\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t<sw-switch-field\n\t\t\t\t\t\t\t:name=\"CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED\"\n\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.advancedOptions.webhooksUpdateEnabled.label')\"\n\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.advancedOptions.webhooksUpdateEnabled.tooltipText')\"\n\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t:value=\"props.currentValue\"\n\t\t\t\t\t\t\t@update:value=\"props.updateCurrentValue\">\n\t\t\t\t\t</sw-switch-field>\n\t\t\t\t</template>\n\t\t\t</sw-inherit-wrapper>\n\n\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED]\"\n\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED]\"\n\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t<sw-switch-field\n\t\t\t\t\t\t\t:name=\"CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED\"\n\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t:label=\"$tc('vrpayment-settings.settingForm.advancedOptions.paymentsUpdateEnabled.label')\"\n\t\t\t\t\t\t\t:helpText=\"$tc('vrpayment-settings.settingForm.advancedOptions.paymentsUpdateEnabled.tooltipText')\"\n\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t:value=\"props.currentValue\"\n\t\t\t\t\t\t\t@update:value=\"props.updateCurrentValue\">\n\t\t\t\t\t</sw-switch-field>\n\t\t\t\t</template>\n\t\t\t</sw-inherit-wrapper>\n\t\t</div>\n\t</sw-container>\n</mt-card>\n\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/vrpayment-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-vrpayment-advanced-options', {\n\ttemplate: template,\n\n\tname: 'VRPaymentAdvancedOptions',\n\n\tinject: [\n\t\t'acl'\n\t],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\tactualConfigData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tallConfigs: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tselectedSalesChannelId: {\n\t\t\trequired: true\n\t\t},\n\t\tisLoading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t...constants\n\t\t};\n\t},\n\n\tmethods: {\n\t\tcheckTextFieldInheritance(value) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckNumberFieldInheritance(value) {\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckBoolFieldInheritance(value) {\n\t\t\treturn typeof value !== 'boolean';\n\t\t}\n\t}\n});\n","/* global Shopware */\n\nimport './acl';\nimport './page/vrpayment-settings';\nimport './component/sw-vrpayment-credentials';\nimport './component/sw-vrpayment-options';\nimport './component/sw-vrpayment-settings-icon';\nimport './component/sw-vrpayment-storefront-options';\nimport './component/sw-vrpayment-advanced-options';\n\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\nimport frFR from './snippet/fr-FR.json';\nimport itIT from './snippet/it-IT.json';\n\nconst {Module} = Shopware;\n\nModule.register('vrpayment-settings', {\n\ttype: 'plugin',\n\tname: 'VRPayment',\n\ttitle: 'vrpayment-settings.general.descriptionTextModule',\n\tdescription: 'vrpayment-settings.general.descriptionTextModule',\n\tcolor: '#28d8ff',\n\ticon: 'default-action-settings',\n\tversion: '1.0.1',\n\ttargetVersion: '1.0.1',\n\n    snippets: {\n        'de-DE': deDE,\n        'en-GB': enGB,\n        'fr-FR': frFR,\n        'it-IT': itIT,\n    },\n\n\troutes: {\n\t\tindex: {\n\t\t\tcomponent: 'vrpayment-settings',\n\t\t\tpath: 'index',\n\t\t\tmeta: {\n\t\t\t\tparentPath: 'sw.settings.index',\n\t\t\t\tprivilege: 'vrpayment.viewer'\n\t\t\t},\n\t\t\tprops: {\n                default: (route) => {\n                    return {\n                        hash: route.params.hash,\n                    };\n                },\n            },\n\t\t}\n\t},\n\n\tsettingsItem: {\n\t\tgroup: 'plugins',\n\t\tto: 'vrpayment.settings.index',\n\t\ticonComponent: 'sw-vrpayment-settings-icon',\n\t\tbackgroundEnabled: true,\n\t\tprivilege: 'vrpayment.viewer'\n\t}\n\n});\n","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class VRPaymentPayment\\Core\\Api\\Config\\Controller\\ConfigurationController\n */\nclass VRPaymentConfigurationService extends ApiService {\n\n\t/**\n\t * VRPaymentConfigurationService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'vrpayment') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Register web hooks\n\t *\n\t * @param {String|null} salesChannelId\n\t * @return {*}\n\t */\n\tregisterWebHooks(salesChannelId = null) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/register-web-hooks`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Test API connection\n\t *\n\t * @param {int|null} spaceId\n\t * @param {int|null} userId\n\t * @param {String|null} applicationId\n\t * @return {*}\n\t */\n\tcheckApiConnection(spaceId = null, userId = null, applicationId = null) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/check-api-connection`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tspaceId: spaceId,\n\t\t\t\tuserId: userId,\n\t\t\t\tapplicationId: applicationId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Set's the default payment method to VRPayment for the given salesChannel id.\n\t *\n\t * @param {String|null} salesChannelId\n\t *\n\t * @returns {Promise}\n\t */\n\tsetVRPaymentAsSalesChannelPaymentDefault(salesChannelId = null) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/set-vrpayment-as-sales-channel-payment-default`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param salesChannelId\n\t * @return {Promise}\n\t */\n\tsynchronizePaymentMethodConfiguration(salesChannelId = null) {\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/synchronize-payment-method-configuration`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @return {*}\n\t */\n\tinstallOrderDeliveryStates() {\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/install-order-delivery-states`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default VRPaymentConfigurationService;\n","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class VRPaymentPayment\\Core\\Api\\Transaction\\Controller\\RefundController\n */\nclass VRPaymentRefundService extends ApiService {\n\n\t/**\n\t * VRPaymentRefundService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'vrpayment') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Refund a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @param {int} quantity\n\t * @param {int} lineItemId\n\t * @return {*}\n\t */\n\tcreateRefund(salesChannelId, transactionId, quantity, lineItemId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/refund/create-refund/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId,\n\t\t\t\tquantity: quantity,\n\t\t\t\tlineItemId: lineItemId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Refund a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @param {float} refundableAmount\n\t * @return {*}\n\t */\n\tcreateRefundByAmount(salesChannelId, transactionId, refundableAmount) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/refund/create-refund-by-amount/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId,\n\t\t\t\trefundableAmount: refundableAmount\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Refund a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @param {float} refundableAmount\n\t * @param {String} lineItemId\n\t * @return {*}\n\t */\n\tcreatePartialRefund(salesChannelId, transactionId, refundableAmount, lineItemId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/refund/create-partial-refund/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId,\n\t\t\t\trefundableAmount: refundableAmount,\n\t\t\t\tlineItemId: lineItemId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default VRPaymentRefundService;\n","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class VRPaymentPayment\\Core\\Api\\Transaction\\Controller\\TransactionController\n */\nclass VRPaymentTransactionService extends ApiService {\n\n\t/**\n\t * VRPaymentTransactionService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'vrpayment') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Get transaction data\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @return {*}\n\t */\n\tgetTransactionData(salesChannelId, transactionId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction/get-transaction-data/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Download Invoice Document\n\t *\n\t * @param context\n\t * @param salesChannelId\n\t * @param transactionId\n\t * @return {string}\n\t */\n\tgetInvoiceDocument(salesChannelId, transactionId) {\n\t\treturn `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction/get-invoice-document/${salesChannelId}/${transactionId}`;\n\t}\n\n\t/**\n\t * Download Packing slip\n\t *\n\t * @param salesChannelId\n\t * @param transactionId\n\t * @return {string}\n\t */\n\tgetPackingSlip(salesChannelId, transactionId) {\n\t\treturn `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction/get-packing-slip/${salesChannelId}/${transactionId}`;\n\t}\n}\n\nexport default VRPaymentTransactionService;","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class VRPaymentPayment\\Core\\Api\\Transaction\\Controller\\TransactionCompletionController\n */\nclass VRPaymentTransactionCompletionService extends ApiService {\n\n\t/**\n\t * VRPaymentTransactionCompletionService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'vrpayment') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Complete a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @return {*}\n\t */\n\tcreateTransactionCompletion(salesChannelId, transactionId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction-completion/create-transaction-completion/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default VRPaymentTransactionCompletionService;","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class VRPaymentPayment\\Core\\Api\\Transaction\\Controller\\TransactionVoidController\n */\nclass VRPaymentTransactionVoidService extends ApiService {\n\n\t/**\n\t * VRPaymentTransactionVoidService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'vrpayment') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Void a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @return {*}\n\t */\n\tcreateTransactionVoid(salesChannelId, transactionId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction-void/create-transaction-void/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default VRPaymentTransactionVoidService;","/* global Shopware */\n\nimport VRPaymentConfigurationService from '../core/service/api/vrpayment-configuration.service';\nimport VRPaymentRefundService from '../core/service/api/vrpayment-refund.service';\nimport VRPaymentTransactionService from '../core/service/api/vrpayment-transaction.service';\nimport VRPaymentTransactionCompletionService\n\tfrom '../core/service/api/vrpayment-transaction-completion.service';\nimport VRPaymentTransactionVoidService\n\tfrom '../core/service/api/vrpayment-transaction-void.service';\n\n\nconst {Application} = Shopware;\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('VRPaymentConfigurationService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new VRPaymentConfigurationService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('VRPaymentRefundService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new VRPaymentRefundService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('VRPaymentTransactionService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new VRPaymentTransactionService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('VRPaymentTransactionCompletionService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new VRPaymentTransactionCompletionService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('VRPaymentTransactionVoidService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new VRPaymentTransactionVoidService(initContainer.httpClient, container.loginService);\n});"],"names":["template$c","Component","Context","Criteria","vrpaymentFormattedHandlerIdentifier","template","orderRepository","orderCriteria","order","paymentMethodId","paymentMethod","template$b","Mixin","Filter","Utils","errorResponse","template$a","template$9","itemUniqueId","newValue","template$8","errorTitle","errorMessage","template$7","template$6","totalAmountTemp","refundsAmountTemp","vrpaymentTransactionId","VRPaymentTransaction","refund","reduction","lineItem","modalType","lineItemId","refundableQuantity","itemRefundableAmount","item","selection","refundPromises","error","resolve","reject","Module","deDE","enGB","frFR","itIT","next","currentRoute","template$5","CONFIG_DOMAIN","CONFIG_APPLICATION_KEY","CONFIG_EMAIL_ENABLED","CONFIG_INTEGRATION","CONFIG_LINE_ITEM_CONSISTENCY_ENABLED","CONFIG_SPACE_ID","CONFIG_SPACE_VIEW_ID","CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED","CONFIG_USER_ID","CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED","CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED","constants","configData","defaultConfig","value","key","res","messageNotBlankErrorState","apiConnectionData","spaceId","userId","applicationKey","template$4","apiConnectionParams","_a","template$3","template$2","template$1","route","ApiService","VRPaymentConfigurationService","httpClient","loginService","apiEndpoint","salesChannelId","headers","apiRoute","response","applicationId","VRPaymentRefundService","transactionId","quantity","refundableAmount","VRPaymentTransactionService","VRPaymentTransactionCompletionService","VRPaymentTransactionVoidService","Application","container","initContainer"],"mappings":"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"}